DOKU - SWMM-File erstellen (WPS1_Simulation) und auslesen (WPS2_Auslesen) mit R

- SWMM installieren (Version 5.1)

- R installieren (Version R-3.4.1)
- RServe installieren (Version 1.7-3): über install.packages() in R
- ggf. Umgebungsvariablen anpassen (Windows7: Systemsteuerung -> System -> erweiterte Systemeinstellungen -> Tab "Erweitert", Button "Umgebungsvariablen...")
	RHOME = C:\Program Files\R\R-x.y.z
	PATH = [...];%RHOME%\bin\x64=
- weitere benötigte Bibliotheken in R, ggf. über install.packages() installieren:
	RCurl (Version 1.95-4.10)
	swmmr (Version 0.7.0),
	zoo (Version 1.8-0)
	sf (Version 0.6-0)
	jsonlite (Version 1.5)

- Apache Tomcat (Version 8.5.20)
- WPS als war-file in Tomcat integrieren (Version 3.6.1, aktuell: 3.6.2 -> https://github.com/52North/WPS/releases/tag/v3.6.2)
- GeoTools package ebenfalls downloaden, entpacken und jar-files (.../WEB-INF/lib) kopieren (...\Tomcat 8.5\webapps\wps\WEB-INF\lib)
- siehe auch: https://52north.org/software/software-projects/wps/#quickStart

- in R/resources Ordner SWMM anlegen, SWMM-Inputdatei und Demo-Regen-Datei dorthin kopieren
	...\webapps\wps\R\resources\SWMM\<NameDesSWMMProjektes>.inp (2daysInt.inp)
	...\webapps\wps\R\resources\SWMM\<NameDesDemoRegens>.dat (9-15aug.dat)


WPS1_Simulation: R-Skript anpassen -> siehe auch Abschnitt 'Anzupassende Variablen' oben im Skript
- wps.res: Dateinamen der inp-Files in Resources-Ordner eintragen (z.B. 2daysInt.inp, 9-15aug.dat)
- swmm_path: SWMM-Installationspfad
- inp: Name des inp-Files (SWMM-Project) wie im recources-directory, z.B. "2daysInt" (ohne Extension)
- out_path: Pfad zum Ordner, in dem die binäre Output-Datei (.out) und ein Log-File (demo_log.txt) gespeichert werden (= Input für WPS2)
- station: URL zu Shapefile mit Position der Regenstation (analog zu http://geoprocessing.demo.52north.org:8080/data/sample-points-wgs84.zip)
- demo_rainfile: Name der Regendatei mit Beispieldaten wie im recources-directory, z.B. "9-15aug.dat" (mit Extension)
- timeout: Maximale Zeitspanne, um auf Antwort von RADOLAN-WPS zu warten
Bemerkung1: Abfragen der Regenwerte für längere Zeiträume dauern sehr lange, ~ 5 Minuten pro abgefragten Tag (= 288 datasets). Die maximale Dauer wird mit der Variable 'timeout' beschraenkt (s.o.). Falls die angegebene Zeit überschritten wird, wird die Simulation mit dem Demo-Regen ausgeführt und eine entsprechende Info im Log-File (demo_log.txt) gespeichert.
Bemerkung2: Falls im abgefragten Zeitraum keine Regendaten vorhanden sind, wird ebenfalls der Demo-Regen verwendet und eine entsprechende Info im Log-File (demo_log.txt) gespeichert.
Bemerkung3: Der Zeitraum des Demo-Regens wird an den angefragten Zeitraum angepasst, sodass das Simulationsergebnis 'aktuell' ist.
Bemerkung4: Der Name der Regenstation (rain gauge) wird automatisch aus dem .inp-File ausgelesen. Es darf nur eine einzige Regenstation vorhanden sein.
Bemerkung5: Es wird nur noch 1 inp-File verwendet; das Straßenreinigungsintervall wird als Input übergeben (sweep), d. h. 0 = keine Straßenreinigung.


WPS2_Auslesen: R-Skript anpassen -> siehe auch Abschnitt 'Anzupassende Variablen' oben im Skript
- wps.res: Dateiname des (original) inp-File in Resources-Ordner eintragen (z.B. 2daysInt.inp)
- inp_path: Pfad zum Ordner, in dem die binäre Output-Datei (.out) und das Log-File (demo_log.txt) gespeichert wurden (= Output von WPS1)
- binary: Name der .out-Datei (= Output von WPS1)
Bemerkung1: Die Codes für das Auslesen der Schadstoffe werden automatisch aus dem inp-File erstellt.
Bemerkung2: Die Namen und Koordinaten aller Knoten (junctions, outfalls) werden automatisch aus dem inp-File ausgelesen. Die Koordinaten werden in WGS84 (EPSG 4326) umgerechnet.